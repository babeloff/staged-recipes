# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json

context:
  name: hydra-java
  version: "0.12.0"

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://github.com/CategoricalData/hydra/archive/refs/tags/${{ version }}.tar.gz
  sha256: 2fbfd7e25bd876fe83d66a9fc0b0c0193a55f34441642b74dede9fdaf4a0a2df

build:
  number: 0
  script:
    interpreter: "nushell"
    content: |
      # Build the Java components using Gradle
      cd $env.SRC_DIR

      # Run Gradle build
      match ($nu.os-info.name) {
        "linux" => {
          ^./gradlew build -x test --no-daemon
        }
        "windows" => {
          ^./gradlew.bat build -x test --no-daemon
        }
        "macos" => {
          ^./gradlew build -x test --no-daemon
        }
      }

      # Create installation directories
      mkdir ($env.PREFIX | path join "lib" "hydra-java")
      mkdir ($env.PREFIX | path join "bin")

      # Create Scripts directory for Windows
      if ($env.target_platform | str contains "win") {
        mkdir ($env.PREFIX | path join "Scripts")
      }

      # Copy built JAR files
      glob "**/*.jar" | where ($it | str contains "build/tmp") == false | each { |jar|
        cp $jar ($env.PREFIX | path join "lib" "hydra-java")
      }

      # Copy dependencies if they exist
      if ("build/libs" | path exists) {
        glob "build/libs/*.jar" | each { |jar|
          cp $jar ($env.PREFIX | path join "lib" "hydra-java")
        }
      }

      # Copy and install the appropriate wrapper script
      match ($nu.os-info.family) {
        "unix" => {
          cp ($env.RECIPE_DIR | path join "wrapper.sh") ($env.PREFIX | path join "bin" "hydra-java")
          ^chmod +x ($env.PREFIX | path join "bin" "hydra-java")
        }
        "win" => {
          cp ($env.RECIPE_DIR | path join "wrapper.bat") ($env.PREFIX | path join "Scripts" "hydra-java.bat")
        }
        _ => {}
      }

      # Copy license and documentation
      if ("LICENSE" | path exists) { cp LICENSE $env.PREFIX }
      if ("README.md" | path exists) { cp README.md $env.PREFIX }

requirements:
  build:
    - openjdk >=11,<12
    - gradle >=7.4,<8.0
    - nushell >=0.80,<1.0
  host:
    - openjdk >=11,<12
  run:
    - openjdk >=11,<12

tests:
  - package_contents:
      files:
        - lib/hydra-java/*
        - if: unix
          then: bin/hydra-java
        - if: win
          then: Scripts/hydra-java.bat
  - script: test_hydra_diagnostic.py
    requirements:
      build:
        - python >=3.8,<4.0
        - openjdk >=11,<12
      run:
        - python >=3.8,<4.0
        - openjdk >=11,<12

about:
  homepage: https://github.com/CategoricalData/hydra
  license: Apache-2.0
  license_file: LICENSE
  summary: Hydra Java implementation - type-safe transformations for data and programs
  description: |
    Hydra is a domain-specific language for data models and data transformations.
    It is based on a typed lambda calculus, and transforms data and schemas between
    languages in a way which maintains type conformance. This package contains the
    Java implementation of Hydra.
  repository: https://github.com/CategoricalData/hydra
  documentation: https://github.com/CategoricalData/hydra/tree/main/hydra-java

extra:
  recipe-maintainers:
    - joshsh
    - phreed
